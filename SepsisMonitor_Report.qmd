---
title: "Sepsis Monitor Report"
author: "Katherine Giorgio"
format: html
---

```{r setup}
#| warning: false
#| message: false
#| echo: false

library(tidyverse)
library(data.table) ## For the fread function
library(lubridate)
library(googledrive)
library(gt)
library(tictoc)

source("sepsis_monitor_functions.R")

df <- makeSepsisDataset()
```

```{r task2}
#| eval: false

### Task 1: Speed reading
# fread with 50 people (this is the function default) = 10.61 s
tic()
df <- makeSepsisDataset(n=50, read_fn="fread")
toc()

# read_delim with 50 people = 21.22 s
tic()
df <- makeSepsisDataset(n=50, read_fn="read_delim")
toc()

# fread with 100 people = 15.68 s
tic()
df <- makeSepsisDataset(n=100, read_fn="fread")
toc()

# read_delim with 100 people = 57.9 s
tic()
df <- makeSepsisDataset(n=100, read_fn="read_delim")
toc()

# fread with 500 people = 76.19 s
tic()
df <- makeSepsisDataset(n=500, read_fn="fread")
toc()

# read_delim with 500 people = "timeout was reached: [physionet.org] Connection timed out after 10007 milliseconds"
tic()
df <- makeSepsisDataset(n=500, read_fn="read_delim")
toc()
```

```{r task3}
#| eval: false

### Uploading to Google Drive

# authenticating Google Drive connection ---- this doesn't seem to solve the problem... leaving it here for now though
#drive_auth(email = "giorg024@umn.edu",
 #          path = "C:\\Users\\kathe\\OneDrive\\Desktop\\04 Advanced R\\Code - Git\\7462-sepsis-monitor\\googledrive_apikey.txt")


# We have to write the file to disk first, then upload it
df %>% write_csv("sepsis_data_temp.csv")

# Uploading happens here
sepsis_file <- drive_put(media = "sepsis_data_temp.csv", 
          path = "https://drive.google.com/drive/folders/1bw6XgCMdGh1DyMIGOm1mPTTDP5rtny5W?usp=sharing",
          name = "sepsis_data.csv")

# Set the file permissions so anyone can download this file.
sepsis_file %>% drive_share_anyone()
```



```{r task4}
#| eval: false

##### eventually you can combine this chunk with the one below to complete task 4

### Making the HTML ICU sepsis status report

### Step 1: getting the data from google drive

## Calling drive_deauth() prevents R from trying to authenticate via a browser
## This is needed to make the GitHub Action work
drive_deauth()
file_link <- "COPY YOUR LINK TO YOUR DRIVE FILE HERE"

## All data up until now
new_data <- updateData(file_link)

## Include only most recent data
most_recent_data <- new_data %>%
  group_by(PatientID) %>%
  filter(obsTime == max(obsTime))
```

```{r}
### Step 2: make table of current sepsis patients with their most recent HR, Temp, and Resp
# IMPORTANT: delete this first step (it is done above) once you figure out the google drive thing
most_recent_data <- df %>%
  group_by(PatientID) %>%
  filter(obsTime == max(obsTime)) %>% 
  ungroup()  ### you added this in - might need to add above

CurrentSepsisTable <- most_recent_data %>% 
  filter(SepsisLabel == 1) %>% 
  select(c(PatientID, HR, Temp, Resp)) %>% 
  gt() %>% 
  tab_header(title = "Sepsis Patients' Current Status",
             subtitle = "data updated every hour") %>% 
  cols_label(PatientID = "Patient ID",
             HR = "Heart Rate",
             Temp = "Body Temperature",
             Resp = "Respirations") %>% 
  cols_align(align="center")


### Step 3: make plots for all patients who have sepsis that show their vital signs history
### IMPORTANT: using df for now and assigning it to new_data, but delete this step once you figure out google drive
new_data <- df

colors <- c("Heart Rate (bpm)" = "darkred",
            "Temperature (C)" = "darkblue",
            "Respiratory Rate (bpm)" = "darkgreen")

VitalsPlots <- new_data %>% 
  group_by(PatientID) %>% 
  filter(sum(SepsisLabel) > 0) %>% 
  ggplot(aes(x=ICULOS)) +
  geom_line(aes(y=HR, color="Heart Rate (bpm)"), linewidth=1.5) +
  geom_line(aes(y=Temp, color="Temperature (C)"), linewidth=1.5) +
  geom_line(aes(y=Resp, color="Respiratory Rate (bpm)"), linewidth=1.5) +
  facet_wrap(~PatientID) +
  labs(x = "Hours Since Admission",
       y = "Vital Sign Value",
       title = "Vital Signs Trends for Current Sepsis Patients",
       color = "Legend") +
  scale_color_manual(values = colors) +
  theme_light()


### Step 4: make a table showing the change in measurements between the last two measurements for all patients

# this should look kind of like the first table but with some data wrangling beforehand
```

last updated: `r Sys.time()`  
  
```{r}
CurrentSepsisTable
```

```{r}
#| warning: false

VitalsPlots
```

```{r}
#| eval: false

ChangeTable
```
